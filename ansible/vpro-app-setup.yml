- name: Setup Tomcat8 & Deploy Artifact
  hosts: appsrvgrp
  become: yes
  vars:
    timestamp: "{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}_{{ ansible_date_time.minute }}"
    war_path: "/tmp/vproapp-{{ vprofile_version }}.war"
  tasks:

    - name: Download latest VProfile.war from nexus
      get_url:
        url: "http://{{USER}}:{{PASS}}@{{nexusip}}:8081/repository/{{reponame}}/{{groupid}}/{{time}}/{{build}}/{{vprofile_version}}"
        dest: "{{ war_path }}"
      register: wardeploy
      tags:
        - deploy

    - name: Check if downloaded WAR file exists
      stat:
        path: "{{ war_path }}"
      register: war_file_stat

    - name: Fail if WAR file is missing or empty
      fail:
        msg: "Downloaded WAR file is missing or corrupt (0 bytes). Deployment aborted."
      when: war_file_stat.stat.size == 0

    - name: Check if ROOT directory exists
      stat:
        path: /usr/local/tomcat8/webapps/ROOT
      register: artifact_stat
      tags:
        - deploy

    - name: Stop tomcat service
      service:
        name: tomcat
        state: stopped
      tags:
        - deploy

    - name: Backup and deploy
      block:

        - name: Archive ROOT directory with timestamp
          archive:
            path: /usr/local/tomcat8/webapps/ROOT
            dest: "/opt/ROOT_{{ timestamp }}.tgz"
          when: artifact_stat.stat.exists
          register: archive_info
          tags:
            - deploy

        - name: Copy ROOT dir as old_ROOT
          shell: cp -r ROOT old_ROOT
          args:
            chdir: /usr/local/tomcat8/webapps/

        - name: Delete existing ROOT directory and ROOT.war
          file:
            path: "{{ item }}"
            state: absent
          when: archive_info.changed
          loop:
            - /usr/local/tomcat8/webapps/ROOT
            - /usr/local/tomcat8/webapps/ROOT.war
          tags:
            - deploy

        - name: Deploy vprofile WAR to ROOT.war
          copy:
            src: "{{ war_path }}"
            dest: /usr/local/tomcat8/webapps/ROOT.war
            remote_src: yes
          register: deploy_info
          tags:
            - deploy

      rescue:
        - name: Restore from old_ROOT if deployment failed
          shell: cp -r old_ROOT ROOT
          args:
            chdir: /usr/local/tomcat8/webapps/

    - name: Start tomcat service
      service:
        name: tomcat
        state: started
      when: deploy_info.changed
      tags:
        - deploy

    - name: Wait for Tomcat to extract ROOT.war
      wait_for:
        path: /usr/local/tomcat8/webapps/ROOT
        timeout: 60
      tags:
        - deploy

#    - name: Deploy application.properties (optional)
#      template:
#        src: templates/application.j2
#        dest: /usr/local/tomcat8/webapps/ROOT/WEB-INF/classes/application.properties
#        force: yes
#      notify:
#        - Restart Tomcat
#      tags:
#        - deploy

  handlers:
    - name: Restart Tomcat
      service:
        name: tomcat
        state: restarted
