- name: Setup Tomcat8 & Deploy Artifact
  hosts: appsrvgrp
  become: yes
  vars:
    timestamp: "{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}_{{ ansible_date_time.minute }}"
  tasks:
    - name: Download latest VProfile.war from nexus
      get_url:
        url: "http://{{ USER }}:{{ PASS }}@{{ nexusip }}:8081/repository/{{ reponame }}/{{ groupid }}/{{ time }}/{{ build }}/{{ vprofile_version }}"
        dest: "/tmp/vproapp-{{ vprofile_version }}"
      register: wardeploy
      tags:
        - deploy

    - name: Check if ROOT directory exists
      stat:
        path: /usr/local/tomcat8/webapps/ROOT
      register: artifact_stat
      tags:
        - deploy

    - name: Stop tomcat service
      service:
        name: tomcat
        state: stopped
      tags:
        - deploy

    - name: Backup and Deploy block
      block:
        - name: Archive ROOT dir with timestamp
          archive:
            path: /usr/local/tomcat8/webapps/ROOT
            dest: "/opt/ROOT_{{ timestamp }}.tgz"
          when: artifact_stat.stat.exists
          register: archive_info
          tags:
            - deploy

        - name: Copy ROOT dir with old_ROOT name
          shell: cp -r ROOT old_ROOT
          args:
            chdir: /usr/local/tomcat8/webapps/

        - name: Delete current artifact
          file:
            path: "{{ item }}"
            state: absent
          when: archive_info.changed
          loop:
            - /usr/local/tomcat8/webapps/ROOT
            - /usr/local/tomcat8/webapps/ROOT.war
          tags:
            - deploy

        - name: Try to deploy artifact or restore old_ROOT
          block:
            - name: Deploy vprofile artifact
              copy:
                src: "/tmp/vproapp-{{ vprofile_version }}"
                dest: /usr/local/tomcat8/webapps/ROOT.war
                remote_src: yes
              register: deploy_info
              tags:
                - deploy
          rescue:
            - name: Restore old ROOT
              shell: cp -r old_ROOT ROOT
              args:
                chdir: /usr/local/tomcat8/webapps/
      rescue:
        - name: Start tomcat service
          service:
            name: tomcat
            state: started

    - name: Start tomcat service
      service:
        name: tomcat
        state: started
      when: deploy_info.changed
      tags:
        - deploy

    - name: Wait until ROOT.war is extracted
      wait_for:
        path: /usr/local/tomcat8/webapps/ROOT
      tags:
        - deploy

  handlers:
    - name: Restart Tomcat
      service:
        name: tomcat
        state: restarted
